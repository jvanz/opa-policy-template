name: CI

on:
  push:
    branches:
    - main
    tags:
    - 'v*'
  pull_request: {}

jobs:
  tests:
    runs-on: ubuntu-latest
    env:
      OPA_VERSION: v0.32.0
      KWCTL_VERSION: v0.2.0
    steps:
      - uses: actions/checkout@v2

      - name: setup Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.15'

      #############################
      # Preparing the environment
      #############################
      - name: Download opa cli
        run: |
          curl -L https://github.com/open-policy-agent/opa/releases/download/${{env.OPA_VERSION}}/opa_linux_amd64_static -o opa
          chmod 755 opa

      - name: Download kwctl
        run: |
          curl -L https://github.com/kubewarden/kwctl/releases/download/${{env.KWCTL_VERSION}}/kwctl-linux-amd64.zip -o kwctl.zip
          unzip kwctl.zip
          chmod 755 kwctl

      - name: Setup BATS
        uses: mig4/setup-bats@v1
        with:
          bats-version: 1.2.1

      #############################
      # Running the tests
      #############################
      - name: run OPA unit tests
        run: PATH=${PWD}:${PATH} make test

      - name: build wasm policy
        run: PATH=${PWD}:${PATH} make wasm

      - name: annotate
        run: PATH=${PWD}:${PATH} make annotate

      - name: e2e-tests
        run: PATH=${PWD}:${PATH} make e2e-tests

      #############################
      # Upload policy as an artifact
      #############################
      - name: get rid of not annotated file
        run: mv annotated.wasm policy.wasm

      - name: upload wasm policy as an artifact
        uses: actions/upload-artifact@v2
        if: github.event.workflow_run.event != 'pull_request'
        with:
          name: policy.wasm
          path: policy.wasm
          if-no-files-found: error

  push-to-oci-registry:
    needs: tests
    if: github.event.workflow_run.event != 'pull_request'
    runs-on: ubuntu-latest
    env:
      OCI_TARGET: #TODO: change to something like ghcr.io/kubewarden/policies/disallow-service-nodeport
      KWCTL_VERSION: v0.2.0

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: policy.wasm

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Download kwctl
        run: |
          curl -L https://github.com/kubewarden/kwctl/releases/download/${{env.KWCTL_VERSION}}/kwctl-linux-amd64.zip -o kwctl.zip
          unzip kwctl.zip
          chmod 755 kwctl

      - name: Publish Wasm policy artifact to OCI registry with the 'latest' tag
        if: startsWith(github.ref, 'refs/heads/')
        run: |
          ./kwctl push policy.wasm ${{ env.OCI_TARGET}}:latest

      - name: Publish Wasm policy artifact to OCI registry with the version tag and 'latest'
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          export OCI_TAG=$(echo $GITHUB_REF | sed -e "s|refs/tags/||")
          ./kwctl push policy.wasm ${{ env.OCI_TARGET }}:${OCI_TAG}

  release:
    needs: tests
    if: ${{ github.event.workflow_run.event != 'pull_request' && startsWith(github.ref, 'refs/tags/') }}
    runs-on: ubuntu-latest

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: policy.wasm

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: policy.wasm
          asset_name: policy.wasm
          asset_content_type: application/wasm

      - name: Notify policy-hub
        uses: kubewarden/notify-policy-hub@main
        with:
          USERNAME: chimera-kube-bot
          PAT: ${{ secrets.WORKFLOW_PAT }}
